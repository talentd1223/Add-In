CLOUD.PickEditor = function (cameraControl) {
    CLOUD.OrbitEditor.call(this, cameraControl, CLOUD.EditorMode.PICK);
};

CLOUD.PickEditor.prototype = Object.create(CLOUD.OrbitEditor.prototype);
CLOUD.PickEditor.prototype.constructor = CLOUD.PickEditor;


CLOUD.PickEditor.prototype.processMouseUp = function (event) {

	event.preventDefault();

	// 同一个位置（鼠标会存在1个像素的误差）
	var samePosition = (Math.abs(this.oldMouseX-event.clientX) <= 1 && Math.abs(this.oldMouseY - event.clientY) <= 1);

    if (event.button === THREE.MOUSE.LEFT) {
		//if (this.oldMouseX == event.clientX && this.oldMouseY == event.clientY) {
		if (samePosition) {
			this.pickHelper.click(event, this.intersectOfMouseDown);
			this.cameraControl.update(true);
			this.intersectOfMouseDown = null;
			return;
		}
	}

	// 同一个位置, 不需要刷新
	if (!samePosition) {
		// force updating render list when orbit or Pan
		// editorManager.isUpdateRenderList is set when mouse up
		if (event.button === this.mouseButtons.ORBIT
			|| event.button === this.mouseButtons.PAN) {
			this.cameraControl.update(true);
		}
	}
	this.intersectOfMouseDown = null;
	this.state = this.StateType.NONE;

	// Application is listening and want some UI icon updating.
	var editorMode = "";
	if (event.button === this.mouseButtons.ORBIT) {
		editorMode = CLOUD.EditorMode.ORBIT;
	}else if (event.button === this.mouseButtons.ZOOM) {
		editorMode = CLOUD.EditorMode.ZOOM;
	}else if (event.button === this.mouseButtons.PAN || event.button === this.mouseButtons.PAN2) {
		editorMode = CLOUD.EditorMode.PAN;
	}
	this.dispatchEvent({type: CLOUD.EVENTS.ON_EDITOR_END, name: editorMode , editor: this.name});
};

CLOUD.PickEditor.prototype.processMouseDoubleClick = function (event) {

    if (event.button === THREE.MOUSE.LEFT) {
        this.pickHelper.doubleClick(event);
    }
};
