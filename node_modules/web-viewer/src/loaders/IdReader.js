/**
 * @author muwj 2016/12/15
 */

CLOUD.Loader.IdReader = function( buffer ) {

    var header = new Uint32Array( buffer, 0, 2 );
    this.size  = header[0];
    this.count = header[1];

    this.cache = {};
    this.idBuffer = buffer.slice( 4 * 2 );
    header = null;
};

CLOUD.Loader.IdReader.prototype = {

    constructor: CLOUD.Loader.IdReader,

    getSize: function () {

        return this.size;
    },

    getCount: function () {

        return this.count;
    },

    getString: function ( index_id ) {

        if (this.cache[index_id] !== undefined) {
            return this.cache[index_id];
        }

        if( index_id >= 0 && index_id < this.count ) {

            var buf = new Uint8Array( this.idBuffer, this.size * index_id, this.size );
            var id_string = String.fromCharCode.apply( null, buf );
            var idx = id_string.indexOf('\0');

            if (idx !== -1) {
                this.cache[index_id] = id_string.substring( 0, idx );
            } else {
                this.cache[index_id] = id_string;
            }

            // this.cache[index_id] = id_string.substring( 0, id_string.indexOf('\0') );
            // return String.fromCharCode.apply( null, buf );

            return this.cache[index_id];
        }
        return undefined;
    },

    getIndex: function ( string_id ) {

        if( string_id == undefined )
            return -1;

        var left = 0;
        var right = this.count - 1;
        var length = string_id.length;

        while( left <= right )
        {
            var mid = Math.floor( ( left + right ) / 2 );
            var buf = new Uint8Array( this.idBuffer, this.size * mid, length );
            var str = String.fromCharCode.apply( null, buf );
            var idx = str.indexOf('\0');
            //var rt = string_id.localeCompare( str.substring( 0, str.indexOf('\0') ) );

            var rt = 0;

            if (idx !== -1) {
                rt = string_id.localeCompare( str.substring( 0, idx ) );
            } else {
                rt = string_id.localeCompare( str );
            }

            if( rt == 0 )
                return mid;
            else if( rt < 0 )
                right = mid - 1;
            else if( rt > 0 )
                left = mid + 1;
        }
        return -1;
    }
};