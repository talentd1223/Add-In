CLOUD.Loader = CLOUD.Loader || {};

CLOUD.Loader.Url = function (serverUrl, databagId) {
    this.serverUrl = serverUrl;
    this.databagId = databagId;
};

CLOUD.Loader.Url.prototype.projectUrl = function () {
    return this.serverUrl + this.databagId + "/config.json";
};

CLOUD.Loader.Url.prototype.sceneUrl = function (idx) {
    idx = idx || 0;
    return this.serverUrl + this.databagId + "/scene/scene_" + idx + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.sceneIdUrl = function () {
    return this.serverUrl + this.databagId + "/scene/scene_id" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.userIdUrl = function () {
    return this.serverUrl + this.databagId + "/scene/user_id" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.octreeUrl = function (idx) {
    idx = idx || 'o';
    // octree index has not upgrade to binary yet
    // return this.serverUrl + this.databagId + "/scene/index_" + idx;
    return this.serverUrl + this.databagId + "/scene/octree_" + idx + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.symbolUrl = function () {
    return this.serverUrl + this.databagId + "/symbol/symbol" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.mpkUrl = function (idx) {
    idx = idx || 0;
    return this.serverUrl + this.databagId + "/mpk/mpk_" + idx + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.meshIdUrl = function () {
    return this.serverUrl + this.databagId + "/mpk/mesh_id" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.materialUrl = function () {
    return this.serverUrl + this.databagId + "/material/material" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.materialIdUrl = function () {
    return this.serverUrl + this.databagId + "/material/material_id" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.userDataUrl = function () {
    return this.serverUrl + this.databagId + "/userdata/userdata" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.cameraUrl = function () {
    return this.serverUrl + this.databagId + "/scene/camera" + CLOUD.GlobalData.ZipResourcePostfix;
};

CLOUD.Loader.Url.prototype.textureUrl = function (textureId) {
    return this.serverUrl + this.databagId + "/texture/" + textureId;
};

CLOUD.Loader.Url.prototype.layerUrl = function () {
    return this.serverUrl + this.databagId + "/scene/layer" + CLOUD.GlobalData.ZipResourcePostfix;
};