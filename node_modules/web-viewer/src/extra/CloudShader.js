THREE.ShaderChunk["meshphong_id_vert"] = meshphongIdVertex;
THREE.ShaderChunk["lights_fillFace_template"] = lights_fillFace_template;
THREE.ShaderChunk["fillFaceFragment"] = fillFaceFragment;

THREE.ShaderChunk["cloudStandardVertex"] = cloudStandardVertex;
THREE.ShaderChunk["cloudStandardFragment"] = cloudStandardFragment;

THREE.ShaderChunk["newStyleVertex"] = newStyleVertex;
THREE.ShaderChunk["newStyleFragment"] = newStyleFragment;


THREE.ShaderLib["fillFacePhong"] = {
    uniforms: THREE.UniformsUtils.merge( [
			THREE.UniformsLib.common,
			THREE.UniformsLib.aomap,
			THREE.UniformsLib.lightmap,
			THREE.UniformsLib.emissivemap,
			THREE.UniformsLib.bumpmap,
			THREE.UniformsLib.normalmap,
			THREE.UniformsLib.displacementmap,
			THREE.UniformsLib.gradientmap,
			THREE.UniformsLib.fog,
			THREE.UniformsLib.lights,

			{
				emissive: { value: new THREE.Color( 0x000000 ) },
				specular: { value: new THREE.Color( 0x111111 ) },
				shininess: { value: 30 }
			}
		] ),

	vertexShader: THREE.ShaderChunk.meshphong_id_vert, //meshphong_vert,
	fragmentShader: THREE.ShaderChunk.fillFaceFragment
}

THREE.ShaderLib["newStyle"] = {

	vertexShader: THREE.ShaderChunk.newStyleVertex,
	fragmentShader: THREE.ShaderChunk.newStyleFragment
	
}

THREE.ShaderLib["cloudStandard"] = {

	vertexShader: THREE.ShaderChunk.cloudStandardVertex,
	fragmentShader: THREE.ShaderChunk.cloudStandardFragment

}