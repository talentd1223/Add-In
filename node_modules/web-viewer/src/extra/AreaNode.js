class AreaNode extends CLOUD.ObjectGroup{
	
	constructor(){
		super(CLOUD.ObjectGroupType.AREANODE, {priority: 20});
		this.globalSpace = true;

		this.areaInfo = new Array();
		this.areaGeometries = new Array();
		this.areaMeshes = new Array();
	
		this.areaMaterial = new THREE.LineMaterial( {color: 0x0F58AC} );
		this.areaMaterial.linewidth = 5.0;
		this.areaMaterial.depthTest = false;
	}

	addAreaInfo(areaInfo) {

		var index = this.areaInfo.length;
		this.areaInfo.push(areaInfo);
		this.update(index);
		return index;
	
	}

	setAreaInfo(index, areaInfo) {

		if (index === undefined) 
			return false;
	
		if (this.areaInfo.length > index) {
			this.areaInfo[index] = areaInfo;
			this.update(index);
			return true;
		}
	
		return false;
	
	}

	setAreaLineColor(color) {

		this.areaMaterial = new THREE.LineMaterial( color );
		this.areaMaterial.linewidth = 1.0;
	}

	removeAreaInfo(index) {

		if (index === undefined) 
			return false;
	
		if(this.areaMesh){
			this.remove(this.areaMesh);
		}
	
		if (this.areaInfo.length > index) {
	
			this.areaInfo.splice(index, 1);
			this.areaGeometries.splice(index, 1);
	
			var mesh = this.areaMeshes[index];
			this.remove(mesh);
	
			this.areaMeshes.splice(index, 1);
			return true;
	
		}
	
		return false;
	
	}

	update (index) {

		if (index === undefined || this.areaInfo.length < index) 
			return;
	
		var length = this.areaInfo[index].length;
		var positions = new Array();
		for (var i = 0; i < length; ++i) {
	
			var areaInfo = this.areaInfo[index][i];
			for(var j = 0, aiLength = areaInfo.length; j<aiLength; ++j){
				var ai = areaInfo[j];
				positions.push(ai.x);
				positions.push(ai.y);
				positions.push(ai.z);
			}
		}
	
		if(this.areaMesh){
			this.remove(this.areaMesh);
		}
		var areaGeometry = new THREE.LineSegmentsGeometry();	
		areaGeometry.setPositions(positions);
		this.areaMaterial.resolution.set( window.innerWidth, window.innerHeight );
		this.areaMesh= new THREE.LineSegments2(areaGeometry, this.areaMaterial);
		this.areaMesh.renderOrder = 100;
		this.add(this.areaMesh);

		this.updateMatrixWorld(true);
	}
}

CLOUD.AreaNode = AreaNode;