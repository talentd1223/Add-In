CLOUD.ClipPlaneService = function (viewer) {

    this.viewer = viewer;
};

CLOUD.ClipPlaneService.prototype = {

    construtor: CLOUD.ClipPlaneService,

    destroy: function () {
        this.viewer = null;
    },

    update: function (camera) {

        var editor = this.getEditor();

        if (editor) {
            editor.update(camera);
            this.viewer.render();
        }
    },

    getEditor: function () {
        var tools = this.viewer.editorManager.tools;
        //var editor = editors[CLOUD.EditorMode.CLIP_BY_BOX];
        for (var i = 0; i < tools.length; i++) {
            if (tools[i].getName() == CLOUD.EditToolMode.CLIP_BY_BOX) {
                return tools[i];
            }
        }
        return null;
    },

    setSectionBox: function(min, max){
        var editor = this.getEditor();
        editor.setSectionBox(min, max);
    },

    toggle: function (enable, visible) {
        var editor = this.getEditor();
        editor.toggle(enable, visible);
    },

    // 显示/隐藏切面
    setVisible: function (enable) {
        var editor = this.getEditor();
        editor.visible(enable);
    },

    setRotatable: function (enable) {
        var editor = this.getEditor();
        editor.rotatable(enable);
    },

    enablePick: function (enable) {
        var editor = this.getEditor();
        editor.enablePick = enable;
    },

    saveState: function () {
        var editor = this.getEditor();
        return editor.store();
    },

    loadState: function (info) {
        var editor = this.getEditor();
        editor.restore(info);
    },

    reset: function () {
        this.viewer.getScene().resetClipPlanes();
    }
};