//记录每个构件的状态

CLOUD.EnumObjectState={
    Visible : 0x0001,
    HideByIsolate : 0x0002,
    Transparent : 0x0004,
    TransparentByIsolate : 0x0008,
};

CLOUD.ObjectInfo = {
    userData : null,
    state : CLOUD.EnumObjectState.Visible,
    material : null
};

CLOUD.objectInfoManager = function(){

    var objectsMap = {};
    var hasMaterial=false;
    var hasObjectHidden = false;
    var hasObjectHiddenByIsolate = false;
    var hasTransparent=false;
    var hasTransparentByIsolate=false;  
    this.init = function(intObjectsMap){
        objectsMap = intObjectsMap;
    };
    this.getObjectsMap = function(){
        return objectsMap;
    };
    this.matchCondition = function(condition,flag,callback){
        var retObject = new Object();
        for(var id in objectsMap){
            var isMatch = true;
            var userdata = objectsMap[id].userData;
            for(var c in condition){
                if(userdata[c]!=condition[c]){
                    isMatch = false;        
                    break;
                }
            }
            retObject.id=id;
            retObject.isMatch=isMatch;
            retObject.color=condition.color;
            
            (flag===isMatch) && callback(id,retObject);
        }
        
    };
    this.matchConditions = function(conditions,flag,callback){
        if(conditions==null){
            this.clearVisible();
            return;
        }
        for (var i = 0; i<conditions.length; i++) {
            var condition = conditions[i];
            this.matchCondition(condition,flag,callback);
        }

    };
    this.setVisible=function(id, bVisible){
        var objInfo = objectsMap[id];
        if(bVisible)
            objInfo.state = objInfo.state|CLOUD.EnumObjectState.Visible;
        else{
            hasObjectHidden = true;
            objInfo.state = objInfo.state&(~CLOUD.EnumObjectState.Visible);
        }

        objectsMap[id]=objInfo;
    };
    this.isVisible=function(id){
        var objInfo = objectsMap[id];
        var isVisible = objInfo.state&CLOUD.EnumObjectState.Visible>0;

        return isVisible;
    };
    this.clearVisible=function(){
        hasObjectHidden = false;
        for(var id in objectsMap){
            var objInfo = objectsMap[id];
            objInfo.state = objInfo.state|CLOUD.EnumObjectState.Visible;
            objectsMap[id] = objInfo;
        }
    };
    this.hideAll=function(){
        hasObjectHidden = true;
        for(var id in objectsMap){
            var objInfo = objectsMap[id];
            objInfo.state = objInfo.state&(~CLOUD.EnumObjectState.Visible);
            objectsMap[id] = objInfo;
        }
    };

    this.setTransparent=function(id, bTranspanrent){
        var objInfo = objectsMap[id];
        if(bTranspanrent){
            objInfo.state = objInfo.state|CLOUD.EnumObjectState.Transparent;
            hasMaterial=true;
            hasTransparent = true;
        }
        else
            objInfo.state = objInfo.state&(~CLOUD.EnumObjectState.Transparent);

        objectsMap[id]=objInfo;
    };
    this.isTransparent=function(id){
        var objInfo = objectsMap[id];
        var isTransparent = (objInfo.state&CLOUD.EnumObjectState.Transparent)>0;
        isTransparent = isTransparent||((objInfo.state&CLOUD.EnumObjectState.TransparentByIsolate)>0);

        return isTransparent;
    };
    this.clearTransparent=function(){
        hasTransparent = false;
        for(var id in objectsMap){
            var objInfo = objectsMap[id];
            objInfo.state = objInfo.state&(~CLOUD.EnumObjectState.Transparent);
            objectsMap[id] = objInfo;
        }
    };

    this.setMaterial=function(id, material){
        var objInfo = objectsMap[id];
        objInfo.material = material;
        objectsMap[id]=objInfo;
        hasMaterial=true;
    };
    this.getMaterial=function(id){
        var objInfo = objectsMap[id];
        var material = objInfo.material;
        
        return material;
    };
    this.clearMaterial=function(){
        for(var objIdx in objectsMap){
            objectsMap[objIdx].material = null;
        }
    };

    this.setIsolateHide=function(id, bHide){
        var objInfo = objectsMap[id];
        if(bHide)
            objInfo.state = objInfo.state|CLOUD.EnumObjectState.HideByIsolate;
        else{
            hasObjectHiddenByIsolate = true;
            objInfo.state = objInfo.state&(~CLOUD.EnumObjectState.HideByIsolate);
        }

        objectsMap[id]=objInfo;
    };
    this.isIsolateHide=function(id){
        var objInfo = objectsMap[id];
        var isHide = (objInfo.state&CLOUD.EnumObjectState.HideByIsolate)>0;

        return isHide;
    };
    this.setIsolateTransparent=function(id, bTransparent){
        var objInfo = objectsMap[id];
        if(bTransparent){
            objInfo.state = objInfo.state|CLOUD.EnumObjectState.TransparentByIsolate;
            hasMaterial=true;
            hasTransparentByIsolate = true;
        }
        else
            objInfo.state = objInfo.state&(~CLOUD.EnumObjectState.TransparentByIsolate);

        objectsMap[id]=objInfo;
    };
    this.isIsolateTransparent=function(id){
        var objInfo = objectsMap[id];
        var isIsolateTransparent = ((objInfo.state&CLOUD.EnumObjectState.TransparentByIsolate)>0);

        return isIsolateTransparent;
    };
    this.clearIsolateHide = function(){
        hasObjectHiddenByIsolate=false;
        for(var id in objectsMap){
            this.setIsolateHide(id,false);
        }
    };
    this.clearIsolates=function(){
        hasTransparentByIsolate=false;
        hasObjectHiddenByIsolate=false;
        for(var id in objectsMap){
            this.setIsolateHide(id,false);
            this.setIsolateTransparent(id,false);
        }
    };
    //清除隔离产生的半透明
    this.clearTransparentByIsolate=function(){
        hasTransparentByIsolate=false;
        for(var id in objectsMap){
            var objInfo = objectsMap[id];
            objInfo.state = objInfo.state&(~CLOUD.EnumObjectState.TransparentByIsolate);
            objectsMap[id] = objInfo;
        }
    };
    // 不可见或者隔离不可见
    this.isHidden=function(id){
        if(!objectsMap.hasOwnProperty(id)) return false;
        var objInfo = objectsMap[id];
        var isHidden = (objInfo.state&CLOUD.EnumObjectState.Visible)==0;
        isHidden = isHidden||((objInfo.state&CLOUD.EnumObjectState.HideByIsolate)>0);

        return isHidden;
    }; 
    // 隔离半透明和半透明
    this.isFrozen=function(id){
        var objInfo = objectsMap[id];
        var isFrozen = (objInfo.state&CLOUD.EnumObjectState.Transparent)>0;
        isFrozen = isFrozen||((objInfo.state&CLOUD.EnumObjectState.TransparentByIsolate)>0);

        return isFrozen;
    }; 
    //reset all object state
    this.resetAll=function(){
        for(var id in objectsMap){
            objectsMap[id].state=CLOUD.EnumObjectState.Visible;
            objectsMap[id].material = null;
        }
        hasMaterial=false;
        hasObjectHidden=hasObjectHiddenByIsolate=false;
        hasTransparent=hasTransparentByIsolate=false;
    };

    this.hasOverrideMaterial = function(id){
        if(id==undefined){
            return hasMaterial;
        }
        var objInfo = objectsMap[id];
        return objInfo.material!=null || this.isTransparent(id);
    };

    this.hasObjectHidden = function(){
        return hasObjectHidden||hasObjectHiddenByIsolate;
    };

    this.hasObjectCantSelected = function(){
        return hasObjectHidden||hasTransparent||hasTransparentByIsolate;
    };
    
    this.hasObjectTransparent = function(){
        return hasTransparent||hasTransparentByIsolate;
    };
};