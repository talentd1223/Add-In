CLOUD.MaterialSelector = function () {

    var _materialAttrs = [
        {name: 'scene', param: {name: 'scene', color: 0x888888, opacity: 0.4, transparent: true, side: THREE.DoubleSide}},
        {name: 'darkRed', param: {name: 'darkRed', color: 0xA02828, opacity: 1, transparent: false, side: THREE.DoubleSide}},
        {name: 'lightBlue', param: {name: 'lightBlue', color: 0x1377C0, opacity: 1, transparent: false, side: THREE.DoubleSide}},
        {name: 'black', param: {name: 'black', color: 0x0, opacity: 0.3, transparent: true, side: THREE.DoubleSide}},
        {name: 'add', param: {name: 'add', color: 0x00FF00, opacity: 1, transparent: true, side: THREE.DoubleSide}},
        {name: 'delete', param: {name: 'delete', color: 0xFF0000, opacity: 0.5, transparent: true, side: THREE.DoubleSide}},
        {name: 'beforeEdit', param: {name: 'beforeEdit', color: 0xFABD05, opacity: 0.5, transparent: true, side: THREE.DoubleSide}},
        {name: 'afterEdit', param: {name: 'afterEdit', color: 0xFABD05, opacity: 1, transparent: true, side: THREE.DoubleSide}}
    ];

    // 内置材质库
    var _materials = {};
    _materials.selection = CLOUD.MaterialUtil.createHighlightMaterial();
    _materials.selection.name = "selection";

    for (var i = 0, len = _materialAttrs.length; i < len; ++i) {
        var attr = _materialAttrs[i];
        var name = attr.name;
        var param = attr.param;
        _materials[name] = CLOUD.MaterialUtil.createStandardMaterial(param);
    }

    _materials.red = _materials.delete;
    _materials.green = _materials.add;
    _materials.yellow = _materials.beforeEdit;
    _materials.blue = _materials.selection;

    var _isolateMaterialDefaultParams = {color: 0x888888, opacity: 0.2, transparent: true, side: THREE.DoubleSide};
    var _isolateMaterial = CLOUD.MaterialUtil.createStandardMaterial(_isolateMaterialDefaultParams);
    _isolateMaterial.name="isolate";

    //需要定义冻结材质 
    var _frozenMaterialDefaultParams = {color: 0x888888, opacity: 0.2, transparent: true, side: THREE.DoubleSide};
    var _frozenMaterial = CLOUD.MaterialUtil.createStandardMaterial(_frozenMaterialDefaultParams);;
    _frozenMaterial.name = "frozen";

     //需要定义选择时的材质 
     var _selectedMaterialDefaultParams = {color: 0x003BBD, side: THREE.DoubleSide};
     var _selectedMaterial = CLOUD.MaterialUtil.createStandardMaterial(_selectedMaterialDefaultParams);
     _selectedMaterial.name="selected";

    /**
     *  获得缺省材质名
     *
     * @return {Object} 材质
     */
    this.getDefaultMaterialName = function () {
        return 'lightBlue';
    };

    /**
     *  获得缺省材质名
     *
     * @param {String} name - 材质名称
     * @return {Object} 材质
     */
    this.get = function (name) {
        return _materials[name];
    };

    /**
     *  获得所有材质
     *
     * @return {Object} 材质
     */
    this.getAll = function () {
        return _materials;
    };

    /**
     * 增加新材质
     *
     * @param {Object} color - 十六进制颜色 + 透明度 ({color: 0x123456, opacity: 0.1})
     * @return {String} 材质标识名
     */
    this.add = function (color) {

        var name, material;
        var params = {};

        if (color && color.hasOwnProperty("color")) {

            params.color = color.color;
            params.side = THREE.DoubleSide;

            if (color.opacity) {

                params.opacity = color.opacity;
                params.transparent = true;

            }

        }

        name = this._getMaterialName(color);

        material = _materials[name];

        if (!material) {
            params.name = name;
            material = CLOUD.MaterialUtil.createStandardMaterial(params);
            _materials[name] = material;
        }

        return name;
    };

    /**
     * 移除新材质
     *
     * @param {Object} color - 十六进制颜色 + 透明度 ({color: 0x123456, opacity: 0.1})
     */
    this.remove = function (color) {

        var name, material;

        name = this._getMaterialName(color);
        material = _materials[name];

        if (material) {
            delete _materials[name];
        }
    };

    /**
     * 是否存在材质
     *
     * @param {string} name - 材质名称
     * @return {Boolean} true - 存在， 否则 不存在
     */
    this.has = function (name) {

        return _materials[name] ? true : false;

    };

    /**
     * 根据颜色获得材质名
     *
     * @param {Object} color - 十六进制颜色 + 透明度 ({color: 0x123456, opacity: 0.1})
     * @return {string} 材质名称
     */
    this.getMaterialNameByColor = function (color) {

        var name, material;

        name = this._getMaterialName(color);

        material = _materials[name];

        if (!material) {
            return this.add(color);
        }

        return name;
    };

    this._getMaterialName = function (color) {

        var name, material;

        if (color && color.hasOwnProperty("color")) {

            if (color.opacity) {
                name = color.color + '_' + color.opacity;
            } else {
                name = "mat_" + color.color;
            }

        } else {
            name = "mat_" + color;
        }

        return name;
    };
    this.setFrozonMaterial = function (params) {

        if (params.color !== undefined) {
            _frozenMaterial.color.setHex(params.color);
        } else {
            _frozenMaterial.color.setHex(_frozenMaterialDefaultParams.color);
        }

        if (params.opacity !== undefined) {
            _frozenMaterial.opacity = params.opacity;
        } else {
            _frozenMaterial.opacity = _frozenMaterialDefaultParams.opacity;
        }

        if (params.transparent !== undefined) {
            _frozenMaterial.transparent = params.transparent;
        } else {
            _frozenMaterial.transparent = _frozenMaterialDefaultParams.transparent;
        }

        if (params.side !== undefined) {
            _frozenMaterial.side = params.side;
        } else {
            _frozenMaterial.side = _frozenMaterialDefaultParams.side;
        }

        _frozenMaterial.needsUpdate = true;

    };
    this.getFrozonMaterial = function () {

        return _frozenMaterial;
    };
    this.setSelectedMaterial = function (params) {

        if (params.color !== undefined) {
            _selectedMaterial.color.setHex(params.color);
        } else {
            _selectedMaterial.color.setHex(_selectedMaterialDefaultParams.color);
        }

        if (params.opacity !== undefined) {
            _selectedMaterial.opacity = params.opacity;
        } else {
            _selectedMaterial.opacity = _selectedMaterialDefaultParams.opacity;
        }

        if (params.transparent !== undefined) {
            _selectedMaterial.transparent = params.transparent;
        } else {
            _selectedMaterial.transparent = _selectedMaterialDefaultParams.transparent;
        }

        if (params.side !== undefined) {
            _selectedMaterial.side = params.side;
        } else {
            _selectedMaterial.side = _selectedMaterialDefaultParams.side;
        }

        _selectedMaterial.needsUpdate = true;

    };
    this.getSelectedMaterial = function () {

        return _selectedMaterial;
    };
    /**
     *  设置隔离构件材质
     *
     * @param {Object} params - 材质参数({color: 0x888888, opacity: 0.5, transparent: true, side: THREE.DoubleSide})
     */
    this.setIsolateMaterial = function (params) {

        if (params.color !== undefined) {
            _isolateMaterial.color.setHex(params.color);
        } else {
            _isolateMaterial.color.setHex(_isolateMaterialDefaultParams.color);
        }

        if (params.opacity !== undefined) {
            _isolateMaterial.opacity = params.opacity;
        } else {
            _isolateMaterial.opacity = _isolateMaterialDefaultParams.opacity;
        }

        if (params.transparent !== undefined) {
            _isolateMaterial.transparent = params.transparent;
        } else {
            _isolateMaterial.transparent = _isolateMaterialDefaultParams.transparent;
        }

        if (params.side !== undefined) {
            _isolateMaterial.side = params.side;
        } else {
            _isolateMaterial.side = _isolateMaterialDefaultParams.side;
        }

        _isolateMaterial.needsUpdate = true;

    };

    /**
     *  获得隔离构件材质
     *
     * @return {Object} 材质
     */
    this.getIsolateMaterial = function () {

        return _isolateMaterial;
    };

    /**
     *  重置隔离构件材质
     *
     */
    this.resetIsolateMaterial = function () {

        _isolateMaterial.color.setHex(_isolateMaterialDefaultParams.color);
        _isolateMaterial.opacity = _isolateMaterialDefaultParams.opacity;
        _isolateMaterial.transparent = _isolateMaterialDefaultParams.transparent;
        _isolateMaterial.side = _isolateMaterialDefaultParams.side;
        _isolateMaterial.needsUpdate = true;
    }

};