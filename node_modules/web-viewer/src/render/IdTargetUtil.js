
/**
 * Utility code for object Id render target.
 */

CLOUD.IdTargetUtil = {
    addIdBufferFlagToMaterial: function (material) {

        if (CLOUD.GlobalData.EnableRenderPass) {
            material.idBuffer = true;
        }
    },

    idVarOfVertexShader: function(){
        // ID variables
        return '\n' + [
            "#ifdef ENABLE_VERTEX_ID",
            "uniform vec3 objId;",
            "varying   vec3 vId;",
            "#endif",
        ].join('\n') + '\n';
    },

    passIdInVertexShader: function() {
        // pass ID data
        return '\n' + [
            "    #ifdef ENABLE_VERTEX_ID",
            "        vId = objId;",
            "    #endif"
        ].join('\n') + '\n';
    },

    idVarOfFragShader: function() {
        // macro define and ID variable
        return '\n' + [
            "#ifdef ID_BUFFER_MRT",
            "#define gl_FragColor gl_FragData[0]",
            "varying vec3 vId;",
            "#endif"
        ].join('\n') + '\n';
    },

    writeIdInFragShader: function() {
        // write ID data to render target
        return '\n' + [
            "    #ifdef ID_BUFFER_MRT",
            "        gl_FragData[1] = vec4(vId, 1.0);",
            "    #endif"
        ].join('\n') + '\n';
    }
};