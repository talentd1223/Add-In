var HighlightShader = {
	uniforms: {

		"tDiffuse": { type: "t", value: null }, //Color buffer containing the rendered 3d model

	                "tID": { type: "t", value: null }, //The ID buffer
	                "objID": { type: "i", value: 0 }, //The currently highlighted object ID (0 means no highlight)
	                "objIDv3": { type: "v3", value: new THREE.Vector3(0, 0, 0) }, //The currently highlighted object ID as RGB triplet
	                "highlightIntensity": { type: "f", value: 1.0 }

	},
	
	vertexShader: [

		"varying vec2 vUv;",

		"void main() {",

			"vUv = uv;",
			"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",

		"}"

	].join( "\n" ),
	
	fragmentShader: [

		"uniform sampler2D tDiffuse;",
		"uniform sampler2D tID;",
		
		"uniform int objID;",
		"uniform vec3 objIDv3;",
		"uniform float highlightIntensity;",

		"varying vec2 vUv;",

		"void main() {",

			"vec4 texel = texture2D( tDiffuse, vUv );",
		
			"if (objID != 0) {",

			"vec4 idAtPixel = texture2D(tID, vUv);",

			"vec3 idDelta = abs(idAtPixel.rgb - objIDv3.rgb);",
			"if (max(max(idDelta.r, idDelta.g), idDelta.b) < 1e-3) {",
		         "texel.rgb += highlightIntensity * 0.2;",
			"}",

		"}",

		"gl_FragColor = texel;",

		"}"

	].join( "\n" )
};